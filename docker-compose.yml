version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  crawler-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    image: muonroii/storyflow-core:latest
    container_name: crawler-consumer
    depends_on:
      - kafka
    # Chạy Kafka dispatcher dưới dạng module để giải quyết vấn đề import
    command: python -m kafka.kafka_dispatcher
    environment:
      # Kết nối tới kafka qua mạng nội bộ của Docker
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_TOPIC=crawl_truyen
      - KAFKA_GROUP_ID=novel-crawler-group
    volumes:
      # Mount các thư mục dữ liệu và log ra ngoài container
      # để dữ liệu không bị mất khi container bị xóa/tạo lại.
      - ./truyen_data:/app/truyen_data
      - ./completed_stories:/app/completed_stories
      - ./logs:/app/logs
      - ./state:/app/state

  crawler-producer:
    build:
      context: .
      dockerfile: Dockerfile
    image: muonroii/storyflow-core:latest
    container_name: crawler-producer
    depends_on:
      - kafka
    # Chạy luồng crawl chính dưới dạng module
    command: python -m main ${CRAWL_TARGET:-all_sites}
    environment:
      # Kết nối tới kafka qua mạng nội bộ của Docker
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_TOPIC=crawl_truyen
      # Các biến môi trường khác cho việc crawl
      - MODE=${CRAWL_TARGET:-all_sites}
    volumes:
      - ./truyen_data:/app/truyen_data
      - ./completed_stories:/app/completed_stories
      - ./logs:/app/logs
      - ./state:/app/state

  telegram-bot:
    image: muonroii/storyflow-core:latest
    container_name: telegram-bot
    command: python -m telegram_bot
    env_file:
      - ./.env
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKERS=kafka:29092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./truyen_data:/app/truyen_data
      - ./completed_stories:/app/completed_stories
      - ./logs:/app/logs
      - ./state:/app/state
      - ./skipped_stories.json:/app/skipped_stories.json
    restart: unless-stopped
